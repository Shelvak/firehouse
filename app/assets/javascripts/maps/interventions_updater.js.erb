var InterventionUpdater = ( function () {
  var _socket
    , timeout = 1500

    , setupSocket = function () {
        var _protocol = window.location.protocol
          , _host = '<%= ENV['SOCKETIO_HOST'] %>' || window.location.hostname
          , _port = '<%= ENV['SOCKETIO_PORT'] %>' || '8085'
          , _full_path = _protocol + '//' + _host + ':' + _port;
        _socket = io( _full_path )
    }
    , listenToUpdates = function () {
        setupSocket()
        _socket.on('update interventions', function (data) {
          var message = '<%= I18n.t('view.maps.updating_the_page') %>'
          showMessage(message)
          setTimeout(refreshPage, timeout)
        });
    }
    , listenToInterventionChanges = function (id) {
        setupSocket()
        _socket.on('update-intervention-' + id, function (data) {
          setTimeout(refreshPage, 2000);
        });
    }
    , emitEvent = function (event, incomingMessage) {
        setupSocket()
        var message = incomingMessage || '<%= I18n.t('view.maps.new_intervention') %>'
        console.log('emit')
        // if (event == 'new intervention') _socket.emit(event, { message: message })
        _socket.emit(event, { message: message })
    }
    , showMessage = function (message) {
        var alertDiv = document.querySelector('[rel="alerts"]')
        alertDiv.className = 'alert alert-warning'
        alertDiv.innerHTML = message
    }
    , alertForNewConsoleIntervention = function () {
        var alertDiv = document.querySelector('[data-new-console-alert="div"]')
          , template = alertDiv.getAttribute('data-template');

        setupSocket()
        _socket.on('new-console-intervention', function (data) {

          content = template.replace('LINK_PLACE', data.link)
          alertDiv.innerHTML = content;
          alertDiv.className = '';
        });
    }
    , refreshPage = function () {
        window.location.reload()
    }
  return {
      update                      : listenToUpdates
    , emitEvent                   : emitEvent
    , consoleAlerts               : alertForNewConsoleIntervention
    , listenToInterventionChanges : listenToInterventionChanges
  }
} () )
